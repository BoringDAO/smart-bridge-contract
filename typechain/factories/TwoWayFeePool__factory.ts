/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TwoWayFeePool, TwoWayFeePoolInterface } from "../TwoWayFeePool";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "NotifyReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "StakeLP",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "notify",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerTokenStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakeToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "twoWay",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userRewardPaid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b52806100206000396000f3fe608060405234801561001057600080fd5b50600436106100b25760003560e01c806370a082311161007157806370a082311461015857806398d078b414610178578063adc9772e1461018b578063ba14f26a1461019e578063df136d65146101be578063f7c618c1146101c757600080fd5b80620a74be146100b75780628cc262146100ea5780632e1a7d4d146100fd57806342baeb84146101125780634e71d92d1461013d57806351ed6a3014610145575b600080fd5b6100d76100c536600461089f565b60046020526000908152604090205481565b6040519081526020015b60405180910390f35b6100d76100f836600461089f565b6101da565b61011061010b366004610902565b610242565b005b600254610125906001600160a01b031681565b6040516001600160a01b0390911681526020016100e1565b6101106102f2565b600054610125906001600160a01b031681565b6100d761016636600461089f565b60066020526000908152604090205481565b610110610186366004610902565b61036e565b6101106101993660046108b9565b61047a565b6100d76101ac36600461089f565b60056020526000908152604090205481565b6100d760035481565b600154610125906001600160a01b031681565b6001600160a01b0381166000908152600460209081526040808320546005909252822054600354839291610231916102129190610ac3565b6001600160a01b0386166000908152600660205260409020549061052e565b61023b9190610981565b9392505050565b336000908152600660205260409020548111156102965760405162461bcd60e51b815260206004820152600d60248201526c04e6f7420456e6f756768204c5609c1b60448201526064015b60405180910390fd5b61029e6102f2565b6000546102b5906001600160a01b03163383610559565b60408051338152602081018390527f6cca423c6ffc06e62a0acc433965e074b11c28479b0449250ce3ff65ac9e39fe91015b60405180910390a150565b60006102fd336101da565b336000818152600460209081526040808320839055600354600590925290912055600154919250610338916001600160a01b03169083610559565b60408051338152602081018390527fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a91016102e7565b6002546001600160a01b031633146103b65760405162461bcd60e51b815260206004820152600b60248201526a6f6e6c792054776f57617960a81b604482015260640161028d565b6000546040516370a0823160e01b815230600482015261043a916001600160a01b0316906370a082319060240160206040518083038186803b1580156103fb57600080fd5b505afa15801561040f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610433919061091a565b82906105c1565b6003546104479190610981565b6003556040518181527f2d4e0f2e3d95acb577e3fd2032dfb3a9903868e36fe542b21943741c29ba819a906020016102e7565b6000610485836101da565b6001600160a01b0384166000908152600460209081526040808320849055600354600583528184205560069091528120805492935084929091906104ca908490610981565b90915550506000546104e7906001600160a01b03163330856105e3565b604080516001600160a01b0385168152602081018390527f0eef359a62dee7c1b6ac3e65bd832c9f9189bbdac34c67f5acfecf6efa65adfb910160405180910390a1505050565b600061053c6012600a6109fc565b6105468484610621565b6105509190610999565b90505b92915050565b6040516001600160a01b0383166024820152604481018290526105bc90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261062d565b505050565b6000610550826105dd6105d66012600a6109fc565b8690610621565b906106ff565b6040516001600160a01b038085166024830152831660448201526064810182905261061b9085906323b872dd60e01b90608401610585565b50505050565b60006105508284610aa4565b6000610682826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661070b9092919063ffffffff16565b8051909150156105bc57808060200190518101906106a091906108e2565b6105bc5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161028d565b60006105508284610999565b606061071a8484600085610722565b949350505050565b6060824710156107835760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161028d565b843b6107d15760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161028d565b600080866001600160a01b031685876040516107ed9190610932565b60006040518083038185875af1925050503d806000811461082a576040519150601f19603f3d011682016040523d82523d6000602084013e61082f565b606091505b509150915061083f82828661084a565b979650505050505050565b6060831561085957508161023b565b8251156108695782518084602001fd5b8160405162461bcd60e51b815260040161028d919061094e565b80356001600160a01b038116811461089a57600080fd5b919050565b6000602082840312156108b0578081fd5b61055082610883565b600080604083850312156108cb578081fd5b6108d483610883565b946020939093013593505050565b6000602082840312156108f3578081fd5b8151801515811461023b578182fd5b600060208284031215610913578081fd5b5035919050565b60006020828403121561092b578081fd5b5051919050565b60008251610944818460208701610ada565b9190910192915050565b602081526000825180602084015261096d816040850160208701610ada565b601f01601f19169190910160400192915050565b6000821982111561099457610994610b06565b500190565b6000826109b457634e487b7160e01b81526012600452602481fd5b500490565b600181815b808511156109f45781600019048211156109da576109da610b06565b808516156109e757918102915b93841c93908002906109be565b509250929050565b60006105508383600082610a1257506001610553565b81610a1f57506000610553565b8160018114610a355760028114610a3f57610a5b565b6001915050610553565b60ff841115610a5057610a50610b06565b50506001821b610553565b5060208310610133831016604e8410600b8410161715610a7e575081810a610553565b610a8883836109b9565b8060001904821115610a9c57610a9c610b06565b029392505050565b6000816000190483118215151615610abe57610abe610b06565b500290565b600082821015610ad557610ad5610b06565b500390565b60005b83811015610af5578181015183820152602001610add565b8381111561061b5750506000910152565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220b20216adb959f11c33d78fd8316fe71746050b8843835024369583ad42941f8f64736f6c63430008040033";

export class TwoWayFeePool__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TwoWayFeePool> {
    return super.deploy(overrides || {}) as Promise<TwoWayFeePool>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TwoWayFeePool {
    return super.attach(address) as TwoWayFeePool;
  }
  connect(signer: Signer): TwoWayFeePool__factory {
    return super.connect(signer) as TwoWayFeePool__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TwoWayFeePoolInterface {
    return new utils.Interface(_abi) as TwoWayFeePoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TwoWayFeePool {
    return new Contract(address, _abi, signerOrProvider) as TwoWayFeePool;
  }
}
