{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x6f596c2856cEF34e80eE8565c5982f33b29Af879",
      "txHash": "0xcdd169de909674d7253d5b5056ea7fab0cca3afa103a2dfe40f6fa31789a13e2",
      "kind": "uups"
    },
    {
      "address": "0x5E44DD11bA5e702cd16D3F1F90Ecb874abc5316b",
      "txHash": "0x4737aaa36b26b48be9cb26793944520b18c1cbb744abcad933e13db8ce306210",
      "kind": "uups"
    },
    {
      "address": "0x596BfE41889D2f43277c481CE00d2EB1125D0b2E",
      "txHash": "0x40131d10245052dec969e4b74a78dae92111b2ccfe5388cd0483e1139ed2cfe9",
      "kind": "uups"
    },
    {
      "address": "0xDce0C168988dd4B3F0b6BA8b219802E153dA69B3",
      "txHash": "0xf2f31031fcf7e627c616962c2ed3b23023bf5a7950acf8ebc5d3009939445176",
      "kind": "uups"
    }
  ],
  "impls": {
    "5fba21dcec80c634c0b04bdae64c4a315b34b3837ee3f2ec283b4f50d48c5f1b": {
      "address": "0xEDf9E79FAB466f6b028541CC25E65BDEE2644357",
      "txHash": "0x8d84e06af6b4c140938262a39ba098b19b3796c351dc367edafa9bcd85c6b6bd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "ProposalVote",
            "label": "threshold",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/ProposalVote.sol:10"
          },
          {
            "contract": "ProposalVote",
            "label": "isFinished",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/ProposalVote.sol:12"
          },
          {
            "contract": "ProposalVote",
            "label": "isVoted",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "src": "contracts/ProposalVote.sol:13"
          },
          {
            "contract": "ProposalVote",
            "label": "counter",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/ProposalVote.sol:14"
          },
          {
            "contract": "TwoWayEdge",
            "label": "chainSupported",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/twowayV2/TwoWayEdge.sol:23"
          },
          {
            "contract": "TwoWayEdge",
            "label": "tokenSupported",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/twowayV2/TwoWayEdge.sol:24"
          },
          {
            "contract": "TwoWayEdge",
            "label": "decimalDiff",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/twowayV2/TwoWayEdge.sol:25"
          },
          {
            "contract": "TwoWayEdge",
            "label": "txHandled",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts/twowayV2/TwoWayEdge.sol:26"
          },
          {
            "contract": "TwoWayEdge",
            "label": "chainid",
            "type": "t_uint256",
            "src": "contracts/twowayV2/TwoWayEdge.sol:27"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "190edd8a8a43f786270e2433226fb5a9d8bdc96b7fd810535e56ca0c8a0a810d": {
      "address": "0xa7e4B85b22d2CC782b794caac8A2E2E8C58842aE",
      "txHash": "0x9f42f2aaa256964602750c0501054e4d85ae4d60bbfbb9e70df253429db7f888",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "ProposalVote",
            "label": "threshold",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/ProposalVote.sol:10"
          },
          {
            "contract": "ProposalVote",
            "label": "isFinished",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/ProposalVote.sol:12"
          },
          {
            "contract": "ProposalVote",
            "label": "isVoted",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "src": "contracts/ProposalVote.sol:13"
          },
          {
            "contract": "ProposalVote",
            "label": "counter",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/ProposalVote.sol:14"
          },
          {
            "contract": "TwoWayEdge",
            "label": "chainSupported",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/twowayV2/TwoWayEdge.sol:23"
          },
          {
            "contract": "TwoWayEdge",
            "label": "tokenSupported",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/twowayV2/TwoWayEdge.sol:24"
          },
          {
            "contract": "TwoWayEdge",
            "label": "decimalDiff",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/twowayV2/TwoWayEdge.sol:25"
          },
          {
            "contract": "TwoWayEdge",
            "label": "txHandled",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts/twowayV2/TwoWayEdge.sol:26"
          },
          {
            "contract": "TwoWayEdge",
            "label": "chainid",
            "type": "t_uint256",
            "src": "contracts/twowayV2/TwoWayEdge.sol:27"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    }
  }
}
