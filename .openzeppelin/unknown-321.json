{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x87DD4a7Ad23B95cD9fF9C26B5cF325905CaF8663",
      "txHash": "0x2a4d20de48b7a4470f7a4b0a5fa12aed606c3553dd6a7d4fc28aabd729806eeb",
      "kind": "uups"
    }
  ],
  "impls": {
    "ad529e68766cedf382f8342ff43fb1721731eb016762da0959e02239c0a8d902": {
      "address": "0xD01a5051253007ae0b7123b50410E3B5A3f6cF95",
      "txHash": "0x7ca307f5c421d1cc829fcfe1d7ed0dc7ec12030f7ca3d5d24c9580193a25b789",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "ProposalVote",
            "label": "threshold",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/ProposalVote.sol:10"
          },
          {
            "contract": "ProposalVote",
            "label": "isFinished",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/ProposalVote.sol:12"
          },
          {
            "contract": "ProposalVote",
            "label": "isVoted",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "src": "contracts/ProposalVote.sol:13"
          },
          {
            "contract": "ProposalVote",
            "label": "counter",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/ProposalVote.sol:14"
          },
          {
            "contract": "TwoWayEdge",
            "label": "chainSupported",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/twowayV2/TwoWayEdge.sol:23"
          },
          {
            "contract": "TwoWayEdge",
            "label": "tokenSupported",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/twowayV2/TwoWayEdge.sol:24"
          },
          {
            "contract": "TwoWayEdge",
            "label": "decimalDiff",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/twowayV2/TwoWayEdge.sol:25"
          },
          {
            "contract": "TwoWayEdge",
            "label": "txHandled",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "contracts/twowayV2/TwoWayEdge.sol:26"
          },
          {
            "contract": "TwoWayEdge",
            "label": "chainId",
            "type": "t_uint256",
            "src": "contracts/twowayV2/TwoWayEdge.sol:27"
          },
          {
            "contract": "TwoWayEdge",
            "label": "isCoin",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/twowayV2/TwoWayEdge.sol:30"
          },
          {
            "contract": "TwoWayEdge",
            "label": "locked",
            "type": "t_bool",
            "src": "contracts/twowayV2/TwoWayEdge.sol:31"
          },
          {
            "contract": "TwoWayEdge",
            "label": "eventIndex0",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/twowayV2/TwoWayEdge.sol:34"
          },
          {
            "contract": "TwoWayEdge",
            "label": "eventHeights0",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/twowayV2/TwoWayEdge.sol:35"
          },
          {
            "contract": "TwoWayEdge",
            "label": "eventIndex1",
            "type": "t_uint256",
            "src": "contracts/twowayV2/TwoWayEdge.sol:38"
          },
          {
            "contract": "TwoWayEdge",
            "label": "eventHeights1",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/twowayV2/TwoWayEdge.sol:39"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    }
  }
}
