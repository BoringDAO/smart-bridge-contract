{
  "address": "0xe17D262c3188F9c49f475Ba92110c12D094f13F3",
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            }
          ],
          "internalType": "struct Multicall.Call[]",
          "name": "calls",
          "type": "tuple[]"
        }
      ],
      "name": "aggregate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "internalType": "bytes[]",
          "name": "returnData",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getBlockHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "blockHash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentBlockCoinbase",
      "outputs": [
        {
          "internalType": "address",
          "name": "coinbase",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentBlockDifficulty",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "difficulty",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentBlockGasLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "gaslimit",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentBlockTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "getEthBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLastBlockHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "blockHash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x64c92cda37de97c19801ca62a79efdd3fa001e88dd8289e61df4bb61fd9b4c40",
  "receipt": {
    "to": null,
    "from": "0x60E76dC9B7369293B364186EcCad993dE205d228",
    "contractAddress": "0xe17D262c3188F9c49f475Ba92110c12D094f13F3",
    "transactionIndex": 0,
    "gasUsed": "391073",
    "logsBloom": "0x
    "blockHash": "0xe6f21334823fcfcc7cf7f020f56a1b434b590e01591b5d29d42a18aabdc73d99",
    "transactionHash": "0x64c92cda37de97c19801ca62a79efdd3fa001e88dd8289e61df4bb61fd9b4c40",
    "logs": [],
    "blockNumber": 262852,
    "cumulativeGasUsed": "391073",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "4e0c89355e8e9323066c88ebb34357a8",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"aggregate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes[]\",\"name\":\"returnData\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getBlockHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBlockCoinbase\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"coinbase\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBlockDifficulty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"difficulty\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBlockGasLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gaslimit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBlockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getEthBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastBlockHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Michael Elliot <mike@makerdao.com>Joshua Levine <joshua@makerdao.com>Nick Johnson <arachnid@notdot.net>\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Multicall - Aggregate results from multiple read-only function calls\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Multicall.sol\":\"Multicall\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Multicall.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\npragma experimental ABIEncoderV2;\\n\\n/// @title Multicall - Aggregate results from multiple read-only function calls\\n/// @author Michael Elliot <mike@makerdao.com>\\n/// @author Joshua Levine <joshua@makerdao.com>\\n/// @author Nick Johnson <arachnid@notdot.net>\\n\\ncontract Multicall {\\n    struct Call {\\n        address target;\\n        bytes callData;\\n    }\\n    function aggregate(Call[] memory calls) public returns (uint256 blockNumber, bytes[] memory returnData) {\\n        blockNumber = block.number;\\n        returnData = new bytes[](calls.length);\\n        for(uint256 i = 0; i < calls.length; i++) {\\n            (bool success, bytes memory ret) = calls[i].target.call(calls[i].callData);\\n            require(success);\\n            returnData[i] = ret;\\n        }\\n    }\\n    // Helper functions\\n    function getEthBalance(address addr) public view returns (uint256 balance) {\\n        balance = addr.balance;\\n    }\\n    function getBlockHash(uint256 blockNumber) public view returns (bytes32 blockHash) {\\n        blockHash = blockhash(blockNumber);\\n    }\\n    function getLastBlockHash() public view returns (bytes32 blockHash) {\\n        blockHash = blockhash(block.number - 1);\\n    }\\n    function getCurrentBlockTimestamp() public view returns (uint256 timestamp) {\\n        timestamp = block.timestamp;\\n    }\\n    function getCurrentBlockDifficulty() public view returns (uint256 difficulty) {\\n        difficulty = block.difficulty;\\n    }\\n    function getCurrentBlockGasLimit() public view returns (uint256 gaslimit) {\\n        gaslimit = block.gaslimit;\\n    }\\n    function getCurrentBlockCoinbase() public view returns (address coinbase) {\\n        coinbase = block.coinbase;\\n    }\\n}\",\"keccak256\":\"0xfa4bd2690d7dc1d74088ccb339eaea7ba2881234e637b36fdb8f5997504291f8\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061061d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806372425d9d1161005b57806372425d9d146100e657806386d516e8146100ec578063a8b0574e146100f2578063ee82ac5e1461010057600080fd5b80630f28c97d1461008d578063252dba42146100a257806327e86d6e146100c35780634d2301cc146100cb575b600080fd5b425b6040519081526020015b60405180910390f35b6100b56100b0366004610388565b610112565b60405161009992919061047e565b61008f61028a565b61008f6100d9366004610367565b6001600160a01b03163190565b4461008f565b4561008f565b604051418152602001610099565b61008f61010e36600461044a565b4090565b8051439060609067ffffffffffffffff81111561013f57634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561017257816020015b606081526020019060019003908161015d5790505b50905060005b8351811015610284576000808583815181106101a457634e487b7160e01b600052603260045260246000fd5b6020026020010151600001516001600160a01b03168684815181106101d957634e487b7160e01b600052603260045260246000fd5b6020026020010151602001516040516101f29190610462565b6000604051808303816000865af19150503d806000811461022f576040519150601f19603f3d011682016040523d82523d6000602084013e610234565b606091505b50915091508161024357600080fd5b8084848151811061026457634e487b7160e01b600052603260045260246000fd5b60200260200101819052505050808061027c906105a0565b915050610178565b50915091565b6000610297600143610559565b40905090565b80356001600160a01b03811681146102b457600080fd5b919050565b6000604082840312156102ca578081fd5b6102d26104ff565b90506102dd8261029d565b815260208083013567ffffffffffffffff808211156102fb57600080fd5b818501915085601f83011261030f57600080fd5b813581811115610321576103216105d1565b610333601f8201601f19168501610528565b9150808252868482850101111561034957600080fd5b80848401858401376000908201840152918301919091525092915050565b600060208284031215610378578081fd5b6103818261029d565b9392505050565b6000602080838503121561039a578182fd5b823567ffffffffffffffff808211156103b1578384fd5b818501915085601f8301126103c4578384fd5b8135818111156103d6576103d66105d1565b8060051b6103e5858201610528565b8281528581019085870183870188018b10156103ff578889fd5b8893505b8484101561043c5780358681111561041957898afd5b6104278c8a838b01016102b9565b84525060019390930192918701918701610403565b509998505050505050505050565b60006020828403121561045b578081fd5b5035919050565b60008251610474818460208701610570565b9190910192915050565b600060408201848352602060408185015281855180845260608601915060608160051b8701019350828701855b828110156104f157878603605f19018452815180518088526104d281888a01898501610570565b601f01601f1916969096018501955092840192908401906001016104ab565b509398975050505050505050565b6040805190810167ffffffffffffffff81118282101715610522576105226105d1565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610551576105516105d1565b604052919050565b60008282101561056b5761056b6105bb565b500390565b60005b8381101561058b578181015183820152602001610573565b8381111561059a576000848401525b50505050565b60006000198214156105b4576105b46105bb565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220ec84dd40c99296af79a167e64c73ca8696407bb627a3baada9c778e1acfcb78664736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c806372425d9d1161005b57806372425d9d146100e657806386d516e8146100ec578063a8b0574e146100f2578063ee82ac5e1461010057600080fd5b80630f28c97d1461008d578063252dba42146100a257806327e86d6e146100c35780634d2301cc146100cb575b600080fd5b425b6040519081526020015b60405180910390f35b6100b56100b0366004610388565b610112565b60405161009992919061047e565b61008f61028a565b61008f6100d9366004610367565b6001600160a01b03163190565b4461008f565b4561008f565b604051418152602001610099565b61008f61010e36600461044a565b4090565b8051439060609067ffffffffffffffff81111561013f57634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561017257816020015b606081526020019060019003908161015d5790505b50905060005b8351811015610284576000808583815181106101a457634e487b7160e01b600052603260045260246000fd5b6020026020010151600001516001600160a01b03168684815181106101d957634e487b7160e01b600052603260045260246000fd5b6020026020010151602001516040516101f29190610462565b6000604051808303816000865af19150503d806000811461022f576040519150601f19603f3d011682016040523d82523d6000602084013e610234565b606091505b50915091508161024357600080fd5b8084848151811061026457634e487b7160e01b600052603260045260246000fd5b60200260200101819052505050808061027c906105a0565b915050610178565b50915091565b6000610297600143610559565b40905090565b80356001600160a01b03811681146102b457600080fd5b919050565b6000604082840312156102ca578081fd5b6102d26104ff565b90506102dd8261029d565b815260208083013567ffffffffffffffff808211156102fb57600080fd5b818501915085601f83011261030f57600080fd5b813581811115610321576103216105d1565b610333601f8201601f19168501610528565b9150808252868482850101111561034957600080fd5b80848401858401376000908201840152918301919091525092915050565b600060208284031215610378578081fd5b6103818261029d565b9392505050565b6000602080838503121561039a578182fd5b823567ffffffffffffffff808211156103b1578384fd5b818501915085601f8301126103c4578384fd5b8135818111156103d6576103d66105d1565b8060051b6103e5858201610528565b8281528581019085870183870188018b10156103ff578889fd5b8893505b8484101561043c5780358681111561041957898afd5b6104278c8a838b01016102b9565b84525060019390930192918701918701610403565b509998505050505050505050565b60006020828403121561045b578081fd5b5035919050565b60008251610474818460208701610570565b9190910192915050565b600060408201848352602060408185015281855180845260608601915060608160051b8701019350828701855b828110156104f157878603605f19018452815180518088526104d281888a01898501610570565b601f01601f1916969096018501955092840192908401906001016104ab565b509398975050505050505050565b6040805190810167ffffffffffffffff81118282101715610522576105226105d1565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610551576105516105d1565b604052919050565b60008282101561056b5761056b6105bb565b500390565b60005b8381101561058b578181015183820152602001610573565b8381111561059a576000848401525b50505050565b60006000198214156105b4576105b46105bb565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220ec84dd40c99296af79a167e64c73ca8696407bb627a3baada9c778e1acfcb78664736f6c63430008040033",
  "devdoc": {
    "author": "Michael Elliot <mike@makerdao.com>Joshua Levine <joshua@makerdao.com>Nick Johnson <arachnid@notdot.net>",
    "kind": "dev",
    "methods": {},
    "title": "Multicall - Aggregate results from multiple read-only function calls",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}